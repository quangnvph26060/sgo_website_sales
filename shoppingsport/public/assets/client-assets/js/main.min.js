const validate = (t) => {
    let e = !0;
    return (
      $(".err_show").removeClass("active"),
      $(t)
        .find(".field")
        .each(function () {
          let t = $(this).val();
          if (
            (("" == t ||
              null == t ||
              (null == t && !$(this).hasClass("file"))) &&
              ((e = !1),
              $(this).parent().find(".err_show.null").addClass("active")),
            t &&
              ("text" == $(this).data("validate") ||
                "textarea" == $(this).data("validate")))
          ) {
            let a = parseInt($(this).data("limit") || 99999999999999);
            t.length > a &&
              ($(this).parent().find(".err_show.null").removeClass("active"),
              $(this).parent().find(".err_show.max").addClass("active"),
              (e = !1));
          }
          if (
            (t &&
              "email" == $(this).data("validate") &&
              !isEmail(t) &&
              ($(this).parent().find(".err_show.null").removeClass("active"),
              $(this).parent().find(".err_show.email").addClass("active"),
              (e = !1)),
            t &&
              "phone" == $(this).data("validate") &&
              !isPhone(t) &&
              ($(this).parent().find(".err_show.null").removeClass("active"),
              $(this).parent().find(".err_show.phone").addClass("active"),
              (e = !1)),
            t && "number" == $(this).data("validate"))
          ) {
            let a = $(this).data("min") || 0,
              i = $(this).data("max") || 99999999999999;
            $(this).parent().find(".err_show.null").removeClass("active"),
              t < a
                ? $(this).parent().find(".err_show.min").addClass("active")
                : t > i &&
                  $(this).parent().find(".err_show.max").addClass("active"),
              (e = !1);
          }
          if ("file" == $(this).data("validate")) {
            let t = this.files,
              i = $(this).data("limit") || 99999999999999,
              s = $(this).attr("accept");
            if (t.length)
              if (t.length > i)
                (e = !1),
                  $(this).parent().find(".err_show.null").removeClass("active"),
                  $(this).parent().find(".err_show.max").addClass("active");
              else
                for (var a = 0; a < t.length; a++) {
                  let i = t[a],
                    n = i.name,
                    r = n.slice(n.lastIndexOf(".")).toLowerCase(),
                    l = s.split(","),
                    d = 2097152,
                    o = i.size || i.fileSize;
                  l.includes(r)
                    ? o > d &&
                      ($(this)
                        .parent()
                        .find(".err_show.null")
                        .removeClass("active"),
                      $(this)
                        .parent()
                        .find(".err_show.max_size")
                        .addClass("active"),
                      (e = !1))
                    : ($(this)
                        .parent()
                        .find(".err_show.null")
                        .removeClass("active"),
                      $(this).parent().find(".err_show.ext").addClass("active"),
                      (e = !1));
                }
            else
              $(this).parent().find(".err_show.null").addClass("active"),
                (e = !1);
          }
        }),
      e
    );
  },
  handleInvalidInput = (t) => {
    let e = $(t)[0];
    e.validity.rangeUnderflow
      ? e.setCustomValidity($(t).parent().find(".err_show.min").text())
      : e.validity.rangeOverflow &&
        e.setCustomValidity($(t).parent().find(".err_show.max").text());
  };
$(document).ready(function () {
  $(".form-custom form").submit(function (t) {
    t.preventDefault();
    let e = $(this),
      a = e.attr("action");
    if (validate(this)) {
      let t = new FormData(this);
      $.ajax({
        headers: {
          "X-CSRF-TOKEN": $('meta[name="csrf-token"]').attr("content"),
        },
        type: "POST",
        url: a,
        data: t,
        enctype: "multipart/form-data",
        processData: !1,
        contentType: !1,
        beforeSend: function () {
          loadingBox("open");
        },
        success: function (t) {
          loadingBox("close"),
            1 == t.status
              ? (alert_show("success", t.message),
                e.find(".form-control").val(""))
              : alert_show("error", t.message);
        },
        error: function (t) {
          loadingBox("close"),
            alert_show("error", $("#loading_box").data("error"));
        },
      });
    }
  }),
    $('.form-custom input[type="file"]').change(function (t) {
      t.preventDefault();
      let e = this.files;
      e.length &&
        $(this).parent().find(".file-number").text(`${e.length} File`);
    }),
    $("body")
      .find("*[data-limit]")
      .on("keyup", function () {
        let t = parseInt($(this).data("limit") || 0),
          e = $(this).val();
        t &&
          e.length > t &&
          ($(this).val(e.substring(0, t)),
          $(this).parent().find(".err_show.limit").addClass("active"));
      });
});
